[{"C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\index.js":"1","C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\App.js":"2","C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\Movies\\Movies.js":"3","C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\Nav\\Header.js":"4","C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\store\\movieContext.js":"5","C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\Movies\\GetMovie.js":"6","C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\Movies\\MovieOverview.js":"7","C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\Movies\\Movie\\Movie.js":"8","C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\UI\\Modal.js":"9"},{"size":142,"mtime":1616592305000,"results":"10","hashOfConfig":"11"},{"size":1266,"mtime":1642459693555,"results":"12","hashOfConfig":"11"},{"size":1069,"mtime":1642459736303,"results":"13","hashOfConfig":"11"},{"size":566,"mtime":1642459654457,"results":"14","hashOfConfig":"11"},{"size":209,"mtime":1642458027622,"results":"15","hashOfConfig":"11"},{"size":1778,"mtime":1642460163811,"results":"16","hashOfConfig":"11"},{"size":930,"mtime":1642435372806,"results":"17","hashOfConfig":"11"},{"size":279,"mtime":1642416594938,"results":"18","hashOfConfig":"11"},{"size":686,"mtime":1642421070012,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15k2gcj",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\index.js",[],"C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\App.js",[],"C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\Movies\\Movies.js",[],"C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\Nav\\Header.js",[],"C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\store\\movieContext.js",[],"C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\Movies\\GetMovie.js",["40","41"],"import axios from \"axios\";\r\nimport Movie from \"./Movie/Movie\";\r\nimport classes from \"./Movies.module.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport MovieOverview from \"./MovieOverview\";\r\nimport movieContext from \"../store/movieContext\";\r\n\r\nconst GetMovie = (props) => {\r\n  const [moviesState, setMoviesState] = useState([]);\r\n  const [movieState, setMovieState] = useState(false);\r\n\r\n  useEffect(async () => {\r\n    const TMDBmovies = await axios.get(props.API);\r\n    const moviesList = TMDBmovies.data.results;\r\n    console.log(props.API, moviesList);\r\n    const transformMovies = moviesList.map((movie) => {\r\n      return {\r\n        img: \"https://image.tmdb.org/t/p/w500/\".concat(movie.poster_path),\r\n        backdrop: \"https://image.tmdb.org/t/p/w780/\".concat(\r\n          movie.backdrop_path\r\n        ),\r\n        overview: movie.overview,\r\n        releaseDate: movie.release_date\r\n          ? movie.release_date\r\n          : movie.first_air_date,\r\n        title: movie.title ? movie.title : movie.name,\r\n        vote: movie.vote_average,\r\n      };\r\n    });\r\n    setMoviesState(transformMovies);\r\n  }, []);\r\n\r\n  const movieHandler = (movie) => {\r\n    setMovieState(movie);\r\n  };\r\n  const closeMovieHandler = () => {\r\n    setMovieState(false);\r\n  };\r\n\r\n  return (\r\n    <movieContext.Provider value={{ movie: movieState }}>\r\n      <h3 className={classes.label}>{props.label}</h3>\r\n      <ul className={classes.movies}>\r\n        {moviesState.map((movie) => (\r\n          <Movie\r\n            img={movie.img}\r\n            key={movie.img}\r\n            onClick={movieHandler.bind(null, movie)}\r\n          />\r\n        ))}\r\n      </ul>\r\n      {movieState && <MovieOverview onClick={closeMovieHandler} />}\r\n    </movieContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GetMovie;\r\n","C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\Movies\\MovieOverview.js",["42"],"import classes from \"./MovieOverview.module.css\";\r\nimport Modal from \"../UI/Modal\";\r\nimport React, { useContext } from \"react\";\r\nimport movieContext from \"../store/movieContext\";\r\n\r\nconst MovieOverview = (props) => {\r\n  const ctx = useContext(movieContext);\r\n  const date = ctx.movie.releaseDate.split(\"-\")[0];\r\n  return (\r\n    <Modal>\r\n      <div className={classes.main}>\r\n        <img src={ctx.movie.backdrop} className={classes.img}></img>\r\n        <button className={classes.closeBtn} onClick={props.onClick}>\r\n          Close\r\n        </button>\r\n        <h2 className={classes.title}>{ctx.movie.title}</h2>\r\n        <div className={classes.details}>\r\n          <h5 className={classes.border}>{ctx.movie.vote}</h5>\r\n          <h5 className={classes.border}>{date}</h5>\r\n        </div>\r\n        <h5 className={classes.overview}>{ctx.movie.overview}</h5>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MovieOverview;\r\n","C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\Movies\\Movie\\Movie.js",[],"C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\UI\\Modal.js",[],{"ruleId":"43","severity":1,"message":"44","line":12,"column":13,"nodeType":"45","endLine":31,"endColumn":4},{"ruleId":"43","severity":1,"message":"46","line":31,"column":6,"nodeType":"47","endLine":31,"endColumn":8,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":12,"column":9,"nodeType":"51","endLine":12,"endColumn":63},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'props.API'. Either include it or remove the dependency array.","ArrayExpression",["52"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"53","fix":"54"},"Update the dependencies array to be: [props.API]",{"range":"55","text":"56"},[1116,1118],"[props.API]"]