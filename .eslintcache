[{"C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\index.js":"1","C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\App.js":"2","C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\Movies\\Movies.js":"3","C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\Nav\\Header.js":"4","C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\store\\movieContext.js":"5","C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\Movies\\GetMovie.js":"6","C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\Movies\\MovieOverview.js":"7","C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\Movies\\Movie\\Movie.js":"8","C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\UI\\Modal.js":"9","C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\Movies\\LatestMovie\\LatestMovie.js":"10","C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\Movies\\LatestMovie\\LatestMovieOverview.js":"11"},{"size":142,"mtime":1616592305000,"results":"12","hashOfConfig":"13"},{"size":1456,"mtime":1642636399006,"results":"14","hashOfConfig":"13"},{"size":1570,"mtime":1642766539193,"results":"15","hashOfConfig":"13"},{"size":570,"mtime":1643101739406,"results":"16","hashOfConfig":"13"},{"size":249,"mtime":1642611149364,"results":"17","hashOfConfig":"13"},{"size":2687,"mtime":1642606438660,"results":"18","hashOfConfig":"13"},{"size":2015,"mtime":1642633954543,"results":"19","hashOfConfig":"13"},{"size":279,"mtime":1642416594938,"results":"20","hashOfConfig":"13"},{"size":686,"mtime":1642421070012,"results":"21","hashOfConfig":"13"},{"size":2844,"mtime":1643104834692,"results":"22","hashOfConfig":"13"},{"size":328,"mtime":1643104666596,"results":"23","hashOfConfig":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15k2gcj",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"iitp8c","C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\index.js",[],"C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\App.js",[],"C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\Movies\\Movies.js",[],"C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\Nav\\Header.js",[],"C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\store\\movieContext.js",[],"C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\Movies\\GetMovie.js",["52","53","54"],"import axios from \"axios\";\r\nimport Movie from \"./Movie/Movie\";\r\nimport classes from \"./Movies.module.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport MovieOverview from \"./MovieOverview\";\r\nimport movieContext from \"../store/movieContext\";\r\n\r\nconst GetMovie = (props) => {\r\n  const [moviesState, setMoviesState] = useState([]);\r\n  const [movieState, setMovieState] = useState(false);\r\n  const [videosState, setVideosState] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    const TMDBmovies = await axios.get(props.API);\r\n    const moviesList = TMDBmovies.data.results;\r\n    let type = \"\";\r\n\r\n    if (props.API.slice(28, 30) === \"tv\") {\r\n      type = \"TV\";\r\n    } else {\r\n      type = \"Movie\";\r\n    }\r\n\r\n    const transformMovies = moviesList.map((movie) => {\r\n      try {\r\n        return {\r\n          type: type,\r\n          img: \"https://image.tmdb.org/t/p/w500/\".concat(movie.poster_path),\r\n          backdrop: \"https://image.tmdb.org/t/p/w780/\".concat(\r\n            movie.backdrop_path\r\n          ),\r\n          overview: movie.overview,\r\n          releaseDate: movie.release_date\r\n            ? movie.release_date\r\n            : movie.first_air_date,\r\n          title: movie.title ? movie.title : movie.name,\r\n          vote: movie.vote_average,\r\n          id: movie.id,\r\n        };\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    });\r\n    setMoviesState(transformMovies);\r\n  }, []);\r\n\r\n  const movieHandler = async (movie) => {\r\n    if (movie.type === \"TV\") {\r\n      const data = await axios.get(\r\n        `https://api.themoviedb.org/3/tv/${movie.id}/videos?api_key=40b98d136e6b6d3ae87106bc05050eb1&1`\r\n      );\r\n      if (data.data.results.length !== 0) {\r\n        setVideosState(data.data.results[0]);\r\n      }\r\n    } else {\r\n      const data = await axios.get(\r\n        `https://api.themoviedb.org/3/movie/${movie.id}/videos?api_key=40b98d136e6b6d3ae87106bc05050eb1&1`\r\n      );\r\n      if (data.data.results.length !== 0) {\r\n        setVideosState(data.data.results[0]);\r\n      }\r\n    }\r\n    setMovieState(movie);\r\n  };\r\n  const closeMovieHandler = () => {\r\n    setMovieState(false);\r\n    setVideosState([]);\r\n  };\r\n\r\n  return (\r\n    <movieContext.Provider value={{ movie: movieState, videos: videosState }}>\r\n      <h3 className={classes.label}>{props.label}</h3>\r\n      <ul className={classes.movies}>\r\n        {moviesState.map((movie) => (\r\n          <Movie\r\n            img={movie.img}\r\n            key={movie.img}\r\n            onClick={movieHandler.bind(null, movie)}\r\n          />\r\n        ))}\r\n      </ul>\r\n      {movieState && <MovieOverview onClick={closeMovieHandler} />}\r\n    </movieContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GetMovie;\r\n","C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\Movies\\MovieOverview.js",["55","56"],"import classes from \"./MovieOverview.module.css\";\r\nimport Modal from \"../UI/Modal\";\r\nimport React, { useState, useContext } from \"react\";\r\nimport movieContext from \"../store/movieContext\";\r\nimport PlayCircleOutline from \"@material-ui/icons/PlayCircleOutline\";\r\n\r\nconst MovieOverview = (props) => {\r\n  const [trailerState, setTrailerState] = useState(false);\r\n  const ctx = useContext(movieContext);\r\n  let date = ctx.movie.releaseDate.split(\"-\")[0];\r\n  let trailer = \"https://www.youtube.com\";\r\n  if (!props.last) {\r\n    trailer = \"https://www.youtube.com/embed/\".concat(ctx.videos.key);\r\n  }\r\n\r\n  const trilerHandler = () => {\r\n    setTrailerState(true);\r\n  };\r\n  const hideTrilerHandler = () => {\r\n    setTrailerState(false);\r\n  };\r\n  return (\r\n    <Modal>\r\n      <div className={classes.main}>\r\n        {!trailerState && (\r\n          <img src={ctx.movie.backdrop} className={classes.img}></img>\r\n        )}\r\n        {trailerState && (\r\n          <iframe\r\n            className={classes.trailer}\r\n            src={trailer}\r\n            title=\"YouTube video player\"\r\n            frameBorder=\"0\"\r\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n            allowFullScreen\r\n          ></iframe>\r\n        )}\r\n        <div className={classes.toFlex}>\r\n          <button className={classes.closeBtn} onClick={props.onClick}>\r\n            Close\r\n          </button>\r\n          <h2 className={classes.title}>{ctx.movie.title}</h2>\r\n          <div className={classes.details}>\r\n            <h5 className={classes.border}>{ctx.movie.vote}</h5>\r\n            <h5 className={classes.border}>{date}</h5>\r\n            {ctx.videos?.key && (\r\n              <PlayCircleOutline\r\n                className={classes.icon}\r\n                onClick={trilerHandler}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n        <h5 className={classes.overview}>{ctx.movie.overview}</h5>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MovieOverview;\r\n","C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\Movies\\Movie\\Movie.js",[],"C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\UI\\Modal.js",[],"C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\Movies\\LatestMovie\\LatestMovie.js",["57","58"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport classes from \"./LatestMovie.module.css\";\r\nimport MovieContext from \"../../store/movieContext\";\r\nimport MovieOverview from \"../MovieOverview\";\r\nimport {\r\n  KeyboardArrowRightOutlined,\r\n  NavigateBeforeOutlined,\r\n} from \"@material-ui/icons\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  transform: translateX(${(props) => props.slideIndex * -100}vw);\r\n`;\r\n\r\nconst LatestMovie = (props) => {\r\n  const [movieState, setMovieState] = useState(false);\r\n  const [latestMovie, setLatestMovie] = useState([]);\r\n  const [slideIndex, setSlideIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    axios.get(props.API).then((res) => {\r\n      const movies = res.data.results;\r\n      const returnMovies = movies.map((movie) => {\r\n        const background = \"https://image.tmdb.org/t/p/w780\".concat(\r\n          movie.backdrop_path\r\n        );\r\n        return {\r\n          backdrop: background,\r\n          title: movie.title,\r\n          vote: movie.vote_average,\r\n          releaseDate: movie.release_date,\r\n          overview: movie.overview,\r\n        };\r\n      });\r\n      setLatestMovie(returnMovies);\r\n    });\r\n  }, []);\r\n\r\n  const movieHandler = (movie) => {\r\n    setMovieState(movie);\r\n  };\r\n  const closeMovieHandler = () => {\r\n    setMovieState(false);\r\n  };\r\n\r\n  const leftSlideHandler = () => {\r\n    setSlideIndex(slideIndex > 0 ? slideIndex - 1 : 19);\r\n  };\r\n\r\n  const rightSlideHandler = () => {\r\n    setSlideIndex(slideIndex < 19 ? slideIndex + 1 : 0);\r\n  };\r\n\r\n  return (\r\n    <MovieContext.Provider value={{ movie: movieState }}>\r\n      <Container slideIndex={slideIndex} className={classes.container}>\r\n        {latestMovie.map((movie) => {\r\n          return (\r\n            <div className={classes.movieContainer}>\r\n              <div className={classes.imgContainer}>\r\n                <NavigateBeforeOutlined\r\n                  onClick={leftSlideHandler}\r\n                  className={classes.left}\r\n                />\r\n                <KeyboardArrowRightOutlined\r\n                  onClick={rightSlideHandler}\r\n                  className={classes.right}\r\n                />\r\n                <img\r\n                  src={movie.backdrop}\r\n                  onClick={movieHandler.bind(null, movie)}\r\n                  className={classes.image}\r\n                />\r\n              </div>\r\n              <h2 className={classes.title}>{movie.title}</h2>\r\n              <p className={classes.releaseDate}>{movie.releaseDate}</p>{\" \"}\r\n              <p className={classes.vote}>{movie.vote}</p>\r\n            </div>\r\n          );\r\n        })}\r\n      </Container>\r\n      {movieState && (\r\n        <MovieOverview onClick={closeMovieHandler} last={\"TRUE\"} />\r\n      )}\r\n    </MovieContext.Provider>\r\n  );\r\n};\r\n\r\nexport default LatestMovie;\r\n","C:\\Users\\amitg\\OneDrive\\Desktop\\AmitGodosi\\פרויקטים\\MovieMe\\src\\components\\Movies\\LatestMovie\\LatestMovieOverview.js",["59"],"import classes from \"./LatestMovie.module.css\";\r\n\r\nconst LatestMovieOverview = (props) => {\r\n  return (\r\n    <div className={classes.imgContainer}>\r\n      <img\r\n        onClick={props.onClick}\r\n        src={props.backdrop}\r\n        className={classes.img}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LatestMovieOverview;\r\n",["60","61"],{"ruleId":"62","severity":1,"message":"63","line":13,"column":13,"nodeType":"64","endLine":45,"endColumn":4},{"ruleId":"65","severity":1,"message":"66","line":24,"column":52,"nodeType":"64","messageId":"67","endLine":24,"endColumn":54},{"ruleId":"62","severity":1,"message":"68","line":45,"column":6,"nodeType":"69","endLine":45,"endColumn":8,"suggestions":"70"},{"ruleId":"71","severity":1,"message":"72","line":19,"column":9,"nodeType":"73","messageId":"74","endLine":19,"endColumn":26},{"ruleId":"75","severity":1,"message":"76","line":26,"column":11,"nodeType":"77","endLine":26,"endColumn":65},{"ruleId":"62","severity":1,"message":"68","line":38,"column":6,"nodeType":"69","endLine":38,"endColumn":8,"suggestions":"78"},{"ruleId":"75","severity":1,"message":"76","line":70,"column":17,"nodeType":"77","endLine":74,"endColumn":19},{"ruleId":"75","severity":1,"message":"76","line":6,"column":7,"nodeType":"77","endLine":10,"endColumn":9},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has a missing dependency: 'props.API'. Either include it or remove the dependency array.","ArrayExpression",["83"],"no-unused-vars","'hideTrilerHandler' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["84"],"no-native-reassign",["85"],"no-negated-in-lhs",["86"],{"desc":"87","fix":"88"},{"desc":"87","fix":"89"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [props.API]",{"range":"90","text":"91"},{"range":"92","text":"91"},[1411,1413],"[props.API]",[1217,1219]]